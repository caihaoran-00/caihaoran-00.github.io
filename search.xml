<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LSTM-FCN论文总结</title>
    <url>/2025/01/14/LSTM-FCN/</url>
    <content><![CDATA[<p><em><strong>论文名：LSTM Fully Convolutional Networks for Time Series Classification</strong></em></p>
<p>**<em>作者：<em><em><em>Fazle Karim1</em>∗</em> , Somshubra Majumdar2</em>∗</em> , Houshang Darabi1 , <em>Senior Member, IEEE, and Shun Chen</em>1</p>
<p><em><strong>年份：2017</strong></em></p>
<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>​		<em><em>全卷积神经网络（FCN）<strong>已经被证明在分类时间序列的任务上可取得最先进的性能。我们提出了利用</strong></em>LSTM</em><strong>子模块来增强</strong>FCN<strong>以进行时间序列分类。我们提出的方法显著增加了</strong>FCN<strong>的表现，模型大小只增加了一点，并且仅需对数据集进行很小的预处理。与其他算法相比，<strong>LSTM-FCN</strong>取得了最先进的性能。我们还使用</strong>注意长短期记忆全卷积网络（ALSTM-FCN）<strong>探索注意力机制在时序分类上的表现。通过注意力机制，人们可以可视化</strong>LSTM**记忆单元的决策过程。此外，我们提出微调作为提升已训练好模型表现的一种方式。最后对我们的模型进行了整体表现的分析并与其他技术进行比较。</p>
<p><em><strong>Keywords：</strong></em> <em><strong>CNN</strong></em>, <em><strong>LSTM</strong></em>, <em><strong>RNN</strong></em>, 时序分类</p>
<hr>
<span id="more"></span>

<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​		在过去的十年里，人们对时间序列分类的兴趣越来越大。时间序列数据无处不在，存在于天气读数、财务记录、工业观察和心理信号[1]中。本文提出了两种深度学习模型来分类时间序列数据集，它们的性能都优于现有的最先进的模型。</p>
<p>​		大量的研究已经使用基于特征的方式或方法来提取一组代表时间序列模式的特征。Bag-of-Words（BoW）[2]，Bag-of-features（TSBF）[3]，Bag-of-SFA-Symbols（BOSS）[4]，BOSSVS [5]，Word提取时间序列分类（WEASEL）[6]，已经在该领域取得了良好的结果。Bag-of-words量化提取的特征，并将BoW输入分类器。TSBF提取随机局部信息的多个子序列，由监督学习者将其压缩成一本用于预测时间序列标签的食谱。BOSS引入了一个基于距离的分类器和直方图的组合。直方图代表了使用符号傅里叶近似创建的时间序列的子结构。BOSSVS扩展了这种方法，提出了一个向量空间模型，在保持性能的同时降低了时间复杂度。WEASEL利用滑动窗口将时间序列转换为特征向量。机器学习算法利用这些特征向量来检测和分类时间序列。所有这些分类器都需要大量的特征提取和特征工程。</p>
<p>​		集成算法在时序分类问题上也取得了先进的性能表现。三种最成功的集成算法合并时间序列的各种特征，Elastic Ensemble (PROP)[7]是一种使用加权集成方法集成了11个时间序列分类器的模型，Shapelet ensemble (SE) [8]是一种将异构集合应用于变换后的形状集的模型，flat collective of transform based ensembles (COTE) [8]是一种融合35种不同分类器到一个分类器的模型。</p>
<p>​		最近，深度神经网络被用于时间序列分类任务。多尺度卷积神经网络（MCNN）[9]、全卷积网络（FCN）[10]和残差网络（ResNet）[10]是利用卷积神经网络（CNN）对单变量时间序列进行端到端分类的深度学习方法。MCNN使用降采样、跳过采样和滑动窗口对数据进行预处理。MCNN分类器的性能高度依赖于应用于数据集的预处理和对该模型的大量超参数集的调整。另一方面，FCN和ResNet不需要对数据或特征工程进行任何繁重的预处理。在本文中，我们通过扩张FCN模块的方式来提高FCN的性能，扩张FCN模块的方式为长短期递归神经网络（LSTM RNN）子模块LSTM-FCN或称为ALSTM-FCN的结合注意力机制的LSTM RNN。与FCN类似，所提出的两个模型都可以用于可视化卷积层的类激活图（CAM），以检测贡献于类标签的区域。此外，ALSTM还可以通过Attention LSTM单元的上下文向量来检测输入序列中贡献于类标签的区域。LSTM-FCN和ALSTM-FCN模型的一个主要优点是，它不需要大量的预处理或特征工程。结果表明，新提出的模型，LSTM-FCN和ALSTMFCN，显著提高了加州大学河滨分校（UCR）基准数据集[11]的性能。在大多数UCR基准数据集上，LSTMFCN和ALSTM-FCN比几种最先进的集成算法产生更好的结果。</p>
<p>​		本文提出了两种端端时间序列分类的深度学习模型。所提出的模型不需要对数据或特征工程进行大量的预处理。这两种模型都在所有85个UCR时间序列基准测试上进行了测试，其性能优于大多数最先进的模型。本文的其余部分组织如下。第二节回顾了背景工作。第三节介绍了所提出的模型的体系结构。第四节，对上述实验结果进行了分析和讨论。最后，在第五节中得出了结论。</p>
<hr>
<h2 id="背景工作"><a href="#背景工作" class="headerlink" title="背景工作"></a>背景工作</h2><h3 id="A-时域卷积"><a href="#A-时域卷积" class="headerlink" title="A 时域卷积"></a>A 时域卷积</h3><p>​		我们使用时域卷积网络作为一个全卷积网络（FCN）分支中的特征提取模块。基本卷积块由卷积层组成，然后是批归一化[13]，然后是激活函数，它可以是校正线性单元（ReLU）或参数校正线性单元（PRELU）[14]。</p>
<h3 id="B-RNNs"><a href="#B-RNNs" class="headerlink" title="B RNNs"></a>B RNNs</h3><p>…</p>
<h3 id="C-LSTM"><a href="#C-LSTM" class="headerlink" title="C LSTM"></a>C LSTM</h3><p>​		虽然lstm具有学习序列中的时间依赖的能力，但它们在长序列中难以学习长期依赖。通过学习这些依赖关系而提出的注意机制[18]可以帮助LSTM学习长期依赖。</p>
<h3 id="D-注意力机制"><a href="#D-注意力机制" class="headerlink" title="D 注意力机制"></a>D 注意力机制</h3><p>…</p>
<blockquote>
<p>此处原理部分后续博客进行图文讲解。</p>
</blockquote>
<hr>
<h2 id="LSTM-FCN"><a href="#LSTM-FCN" class="headerlink" title="LSTM-FCN"></a>LSTM-FCN</h2><h3 id="A-网络架构"><a href="#A-网络架构" class="headerlink" title="A.网络架构"></a>A.网络架构</h3><p>​		时域卷积已被证明是解决时间序列分类问题[10]的一种有效的学习模型。由时域卷积组成的全卷积网络通常被用作特征提取器，全局平均池[19]用于在分类前减少模型中的参数量。在所提出的模型中，全卷积块增加了一个LSTM块，然后是dropout[20]，如图1所示。</p>
<img src="/2025/01/14/LSTM-FCN/tu1.jpg" class="" title="LSTM-FCN architecture LSTM-FCN architecture">

<p>​		全卷积块由三个堆叠的时域卷积块组成，滤波器大小分别为128、256和128。每个卷积块都与Wang等人[10]提出的CNN体系结构中的卷积块相同。每个块由一个时域卷积层组成，它伴随着批归一化[13]（动量momentum为0.99，速度epsilon为0.001），然后是一个ReLU激活函数。最后，在最终的卷积块之后应用全局平均池化。</p>
<p>​		同时，时间序列输入被传递到一个维度洗牌层（在III-B节中解释）。然后将从维度洗牌转换后的时间序列传递到LSTM块中。LSTM块包括一个一般的LSTM层或一个注意的LSTM层，然后是一个dropout。全局池化层和LSTM块的输出被连接并传递到一个softmax分类层。</p>
<h3 id="B-网络输入"><a href="#B-网络输入" class="headerlink" title="B.网络输入"></a>B.网络输入</h3><p>​		全卷积块和LSTM块在两个不同的视图中感知相同的时间序列输入。全卷积块将时间序列视为具有多个时间步长的单变量时间序列。如果有一个长度为N的时间序列，则全卷积块将以N个时间步长接收数据。</p>
<p>​		相反，该架构中的LSTM块接收输入的时间序列作为一个具有单个时间步长的多元时间序列。这是通过维度洗牌层来完成的，它改变了时间序列的时间维度。一个长度为N的单变量时间序列，经过变换后，将被视为一个具有单一时间步长的多元时间序列（有N个变量）。</p>
<p>​		这种方法是提高所提体系架构的性能表现的关键。相比之下，当LSTM块接收到具有N个时间步长的单变量时间序列时，由于对小的短序列UCR数据集的快速过拟合以及在较大的长序列UCR数据集中无法学习长期依赖关系，性能显著降低。</p>
<h3 id="C-模型的微调"><a href="#C-模型的微调" class="headerlink" title="C.模型的微调"></a>C.模型的微调</h3><p>​		迁移学习是一种技术，在另一个数据集上训练模型时，在数据集上训练模型所获得的知识可以重用，这样新数据集的域与先验域[21]有一定的相似性。类似地，微调可以被描述为在同一数据集上的迁移学习。</p>
<p>​		因此，训练过程可以分为两个不同的阶段。在初始阶段，为给定的数据集选择模型的最优超参数。然后使用这些超参数设置在给定的数据集上训练模型。在第二步中，我们对这个初始模型应用微调。</p>
<p>​		使用原始数据集，在微调阶段迭代迁移学习的过程。每次重复都使用上一次迭代的模型权重进行初始化。在每次迭代中，学习率都会减半。此外，每次迭代将批量大小减半。这样做，直到初始学习速率是1e−4，批处理大小是32。这个过程重复K次，其中K是一个任意的常数，一般设为5。</p>
<img src="/2025/01/14/LSTM-FCN/table1.jpg" class="" title="Fine-tuning algorithm Fine-tuning algorithm">

<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>​		该模型已在所有85个UCR时间序列数据集[11]上进行了测试。在所有实验中，FCN块都保持不变。通过对8~128个记忆单元的超参数搜索，得到了LSTM记忆单元cell的最佳数量。训练期的数量通常在2000个epochs保持不变，但在算法需要更长时间才能收敛的数据集上会增加epochs。初始batch size为128，在微调算法的每次连续迭代时减半。在使用LSTM或ALSTM层后，使用80%的高dropout来防止过拟合。类别不平衡问题通过一个受King等人[22]启发的类别加权方案进行处理。</p>
<p>​		所有模型均通过Adam优化器[23]进行训练，初始学习率为1e−3，最终学习率为1e−4。所有的卷积内核都用由He等人. [24]提出的初始化方法。如果验证得分没有提高，那么每100个epoches让学习率lr降低$1&#x2F;\sqrt[3]{2}$，直到达到最终的学习率。没有对UCR数据集进行额外的预处理，因为它们接近0均值和单位方差。所有模型都进行了微调，表I中所述的分数是指模型在微调前后获得的分数。</p>
<h3 id="A-评价指标"><a href="#A-评价指标" class="headerlink" title="A.评价指标"></a>A.评价指标</h3><p>​		在本文中，我们使用Wang等人[10]所述的精度、基于秩的统计数据和每类误差的平均值来对该模型进行了评估。</p>
<p>​		使用的基于秩的评估是算术秩、几何秩和威尔克森符号秩检验。算术秩是数据集的秩的算术平均值。几何秩是每个数据集的秩的几何平均值。采用威尔科克森符号秩检验来比较所提模型与现有模型的最先进模型的中值秩。原假设和备择假设如下：<br>$$<br>H_o: \text{Median}<em>{\text{proposed model}} &#x3D; \text{Median}</em>{\text{state-of-the-art model}} \<br>H_a: \text{Median}<em>{\text{proposed model}} \neq \text{Median}</em>{\text{state-of-the-art model}}<br>$$<br>​		平均每类误差（Mean Per Class Error，MPCE）定义为每类误差（PCE）的算术平均值，<br>$$<br>PCE_k &#x3D; \frac{1 - \text{accuracy}}{\text{number of unique classes}} \<br>MPCE &#x3D; \frac{1}{K} \sum PCE_k.<br>$$</p>
<h3 id="B-Results"><a href="#B-Results" class="headerlink" title="B. Results"></a>B. Results</h3><p>​		图2是在“CBF”数据集上的ALSTM记忆单元的可视化表示的一个例子。图中序列被“压缩”在一起的点是所有类具有相同权重的点。这些是时间序列中注意力LSTM可以正确识别类的点。通过对实际时间序列的目视检查，进一步支持了这一点。挤压点是每个类可以相互区分的点，如图2所示。</p>
<p>​		表i总结了UCR数据集上的性能。彩色单元格是优于该数据集的最先进模型的单元格。所提出的模型，ALSTM-FCN模型和LSTMFCN模型，在两个阶段，没有微调（阶段1）和微调（阶段2），在至少43个数据集上优于最先进的模型。图3中的平均算术排名表明了我们提出的模型优于现有的最先进的模型。使用Wilcoxon符号秩检验进一步验证了这一点，其中与现有的最先进的模型相比，每个提出的模型的p值都小于0.05，表2。</p>
]]></content>
      <categories>
        <category>theory</category>
      </categories>
      <tags>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>AudioSet数据集介绍</title>
    <url>/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在找狗叫数据集，发现<a href="https://research.google.com/audioset///dataset/index.html">AuidoSet</a>数据集。这是google在2017年推出的用于<em><strong>音频事件</strong></em>研究的大规模手动注释音频事件数据集。其中包含632个音频事件类别以及从<em><strong>YouTube视频</strong></em>中提取的2,084,320个人工标记的10秒声音片段集合（527个标签），google期望通过发布AudioSet为音频事件检测提供一个通用的、符合实际规模（与现实相符）的评估任务，并为全面的声音事件词汇表提供一个起点。</p>
<hr>
<span id="more"></span>

<h2 id="本体（Ontology）"><a href="#本体（Ontology）" class="headerlink" title="本体（Ontology）"></a>本体（Ontology）</h2><p>​		AudioSet 本体是按层次结构组织的声音事件的集合。该本体涵盖了各种日常声音，从人类和动物的声音到自然和环境声音，再到音乐和其他声音。这也解释了为什么AudioSet的音频事件类别是632个，而标签个数是527，因为分层结构导致的类别比标签多。</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/%E6%9C%AC%E4%BD%93En.jpg" class="" title="AudioSet本体顶层的两层 AudioSet本体顶层的两层">



<center>图 1: AudioSet本体顶层的两层</center>

<p>​		图1给出了AudioSet数据集本体顶层的两层分类，下一层还有更小的分类。</p>
<hr>
<h2 id="数据集介绍"><a href="#数据集介绍" class="headerlink" title="数据集介绍"></a>数据集介绍</h2><p>​		所有数据集的详细分类可在<a href="https://research.google.com/audioset///dataset/index.html">此页面</a>查询，数据集分为三个不相交的集合：平衡评估集、平衡训练集和不平衡训练集。平衡集中每个类别具有相同数量的示例，不平衡训练集包含其余（除Evaluation和Balanced train外）的带注释片段。</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/dog.jpg" class="" title="Dog数据集的详细信息 Dog数据集的详细信息">

<center>图 2: Dog数据集的详细信息</center>

<p>​		图2给出便签中包含狗的数据集的详细信息，以Dog标签为例，可看出：<br>$$<br>totals&#x3D;Evalution+Balanced train+Unbalanced train<br>$$<br>​		注意，非平衡训练集的标签可能会很不准确，即视频的标定10秒段内并没有出现对应标签的声音事件，使用时需筛选。</p>
<h2 id="数据集下载"><a href="#数据集下载" class="headerlink" title="数据集下载"></a>数据集下载</h2><p>2017年发布的AudioSet数据集版本提供两种格式：</p>
<ol>
<li>文本（csv）文件提供描述每个片段的YouTube视频 ID、开始时间、结束时间以及一个或多个标签。</li>
<li>以 1Hz 提取的 128 维音频特征。音频特征是使用Hershey 等人描述的 VGG 启发式声学模型提取的，该模型在<a href="https://research.google.com/youtube8m/index.html">YouTube-8M</a>的初步版本上进行训练。这些特征经过 PCA 处理并量化，以与 YouTube-8M 提供的音频特征兼容。它们存储为 TensorFlow Record 文件。用于生成特征的模型可在<a href="https://github.com/tensorflow/models/tree/master/research/audioset">TensorFlow 模型 GitHub 存储库</a>中找到。</li>
</ol>
<p>我们仅关注第一种格式，csv下载链接如下：</p>
<ul>
<li>Evaluation - <a href="http://storage.googleapis.com/us_audioset/youtube_corpus/v1/csv/eval_segments.csv">eval_segments.csv</a></li>
<li>Balanced train - <a href="http://storage.googleapis.com/us_audioset/youtube_corpus/v1/csv/balanced_train_segments.csv">balanced_train_segments.csv</a></li>
<li>Unbalanced train - <a href="http://storage.googleapis.com/us_audioset/youtube_corpus/v1/csv/unbalanced_train_segments.csv">unbalanced_train_segments.csv</a></li>
</ul>
<h3 id="CSV文件格式"><a href="#CSV文件格式" class="headerlink" title="CSV文件格式"></a>CSV文件格式</h3><p>每个CSV文件都有一个三行的标题，每行以<code>#</code>开头，前两行表示创建时间和一般统计信息，本节以<code>eval_segments.csv</code>说明：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Segments csv created Sun Mar  <span class="number">5</span> <span class="number">10</span>:<span class="number">54</span>:<span class="number">25</span> <span class="number">2017</span></span><br><span class="line"># num_ytids=<span class="number">20371</span>, num_segs=<span class="number">20371</span>, num_unique_labels=<span class="number">527</span>, num_positive_labels=<span class="number">51804</span></span><br><span class="line"># YTID, start_seconds, end_seconds, positive_labels</span><br></pre></td></tr></table></figure>

<p>后续表格即为标头定义的列，包括视频ID（YTID），起始时间（start_seconds），结束时间（end_seconds），目标标签（positive_labels），如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-<span class="number">0</span>RWZT-miFs, <span class="number">420</span>.<span class="number">000</span>, <span class="number">430</span>.<span class="number">000</span>, &quot;/m/<span class="number">03</span>v3yw,/m/<span class="number">0</span>k4j&quot;</span><br></pre></td></tr></table></figure>

<p>表示<a href="https://www.youtube.com/watch?v=-0RWZT-miFs&t=420s">Youtube视频</a><code>-0RWZT-miFs</code>的10秒声音事件段开始于420秒，结束于430秒，标注人员确认这10秒内存在&#x2F;m&#x2F;03v3yw（“钥匙叮当声”）和 &#x2F;m&#x2F;0k4j（“汽车声”），关于positive_labels的具体意义，请参与<a href="https://github.com/audioset/ontology/blob/master/ontology.json">ontology.json</a>，例如：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ontology.jpg" class="" title="&#x2F;m&#x2F;03v3yw本体 &#x2F;m&#x2F;03v3yw本体">

<center>图 3: /m/03v3yw本体</center>

<h3 id="YouTube视频链接格式"><a href="#YouTube视频链接格式" class="headerlink" title="YouTube视频链接格式"></a>YouTube视频链接格式</h3><p>以<code>https://www.youtube.com/watch?v=-0RWZT-miFs&amp;t=30s</code>为例，其中：</p>
<ul>
<li><code>https://www.youtube.com/watch?v=</code>是标准的视频播放链接前缀</li>
<li><code>v=</code>后面的部分是视频的唯一标识符（Video ID or YTID)，通常是11个字符，如这里的<code>-0RWZT-miFs</code></li>
<li><code>&amp;t</code>表示视频的开始时间，可选，并且s可以省略</li>
</ul>
<h3 id="YouTube视频下载"><a href="#YouTube视频下载" class="headerlink" title="YouTube视频下载"></a>YouTube视频下载</h3><p>目前（2025-1-17），下载YouTube视频的主流方式是使用<a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a>，yt-dlp 是一款功能丰富的命令行音频&#x2F;视频下载器，支持<a href="https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md">数千个网站</a>。该项目是基于已停用的<a href="https://github.com/blackjack4494/yt-dlc">youtube-dlc</a>的 <a href="https://github.com/ytdl-org/youtube-dl">youtube-dl</a>分支.</p>
<h4 id="yt-dlp安装"><a href="#yt-dlp安装" class="headerlink" title="yt-dlp安装"></a>yt-dlp安装</h4><p>yt-dlp官方推荐使用已编译的<a href="https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#release-files">二进制</a>文件，下文介绍Win10电脑上二进制（命令行）方式和python脚本方式实现相同功能。</p>
<h5 id="二进制文件方式"><a href="#二进制文件方式" class="headerlink" title="二进制文件方式"></a>二进制文件方式</h5><ul>
<li><p>点击<a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe">yt-dlp.exe</a>下载yt-dlp.exe</p>
</li>
<li><p><strong>ffmpeg</strong> and <strong>ffprobe</strong></p>
<p><code>yt-dlp</code>依赖<code>ffmpeg</code>和<code>ffprobe</code>，点击<a href="https://www.ffmpeg.org/">ffmpeg</a>按下述图文操作安装即可：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg1.jpg" class=""></li>
</ul>
<p>点击链接后，按上图点击顺序操作，随后下滑到release builds，点击下图所示zip压缩文件进行下载：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg2.jpg" class="">

<p>解压后得到：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg3.jpg" class="">

<p>在<code>bin</code>文件夹下可看到：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg4.jpg" class="">

<p><code>bin</code>目录下打开<code>cmd</code>，输入<code>ffmpeg</code>，可看到下图输出信息：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg5.jpg" class="">

<p>但是在其他路径下运行<code>ffmpeg</code>命令会提示：<code>&#39;ffmpeg&#39; 不是内部或外部命令，也不是可运行的程序 或批处理文件。</code>是因为我们没有把可执行文件添加到系统路径中，打开系统环境变量，将刚才的<code>bin</code>目录路径添加到用户变量或系统变量的<code>Path</code>中即可，如：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/ffmpeg6.jpg" class="">

<p>设置好环境变量后，新起一个<code>cmd</code>窗口，即可在任意路径调用<code>ffmpeg</code>命令。</p>
<ul>
<li><p>万事具备！开始展示！到你<code>yt-dlp.exe</code>所在的文件夹打开<code>cmd</code>，先下载个视频试试效果，运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp.exe https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>这个时候如果没有魔法上网，将会一直超时重试：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/retry.jpg" class="">

<p>打开魔法上网，注意想在<code>cmd窗口</code>使用代理，需要如下图配置下（配置后别忘了重新开一个cmd窗口）：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/clash.jpg" class="">

<p>重新在<code>yt-dlp.exe</code>所在的文件夹打开<code>cmd</code>，再次运行上述命名，你将会看到：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/error1.jpg" class="">

<p>这是<code>yt-dlp</code>在下载指定<code>YouTube</code>视频时遇到了需要登录验证的问题，如果在你的浏览器上已经登陆了（或者登录过且Cookies没过期）<code>YouTube</code>，（以chrome谷歌浏览器举例)那么可以添加<code>--cookies-from-browser chrome</code>参数，如果没登录过，可以去登录下，如果这个方式行不通，就需要使用<code>--cookies</code>参数指定你自己导出的<code>Cookies</code>文件（下面会讲）。</p>
<p>运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies-from-browser chrome https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>出现：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/error2.jpg" class="">

<p>关闭你的chrome浏览器，再运行上述命令，得到：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/error3.jpg" class="">

<p>害，只能使用插件导出<code>Cookies</code>文件了，去安装<a href="https://chromewebstore.google.com/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc">Get cookies.txt LOCALLY</a><code>Chrome</code>插件后，按顺序点击：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/chrome.jpg" class="">

<p>然后，打开<a href="https://www.youtube.com/">youtube</a>首页，再按顺序点击：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/chrome2.jpg" class="">

<p>即会下载<code>www.youtube.com_cookies.txt</code>，将其放在<code>yt-dlp.exe</code>同级目录下，运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p><b>OK!</b>下载成功：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/down1.jpg" class="">

<p>从打印信息可看出，实际上是下载了两个东西，首先是<code>Corgi Cuteness with Puppy Growl! [0Wkk9iNzA9c].f135.mp4</code>视频文件，然后是<code>Corgi Cuteness with Puppy Growl! [0Wkk9iNzA9c].f140.m4a</code>音频文件，然后将这两个文件合并成<code>Corgi Cuteness with Puppy Growl! [0Wkk9iNzA9c].mp4</code>视频文件，最后是将两个单独的文件删除。</p>
<p>运行下面命令以：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt --list-formats https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>铛铛铛铛，又出问题了：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/error4.jpg" class="">

<p>打开你的<code>www.youtube.com_cookies.txt</code>，搜索<code>LOGIN_INFO</code>和<code>SAPISID</code>，是不是发现没有这两个关键词，哦原来是我们在生成cookies的网页上没有做登录<code>Youtube</code>的操作，让我们重新操作下，先把已登录的<code>Youtube</code>账号退掉，再打开一个新网页登录<code>Youtube</code>账号，后续生成<code>cookies</code>的操作和之前介绍一致，再次运行上述命令：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/list.jpg" class="">

<p>好，我们看到一些格式信息，上面的<code>f135</code>就对应这里的<code>ID:135</code>，是<code>video only</code>，也就是不包含音频，<code>f140</code>对应<code>ID:140</code>，是<code>audio only</code>，也就是不包含视频。</p>
<p>我只需要音频，并不需要视频该怎么做呢，聪明的你可能大概想到了，通过<code>-f</code>指定<code>ID</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt -f <span class="number">140</span> https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>下载的音频文件为<code>Corgi Cuteness with Puppy Growl! [0Wkk9iNzA9c].m4a</code>，格式为<code>2通道</code>，<code>44100Hz</code>，如果每次下载音频都需要先查询<code>--list-formats</code>有些太麻烦了，有没有简便方法？有，通过<code>-f</code>参数指定：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt -f ba https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>这里的<code>ba</code>是<code>bestaudio</code>的缩写，使用<code>bestaudio</code>效果一样，那如果我想对原始音频格式做一些修改呢？比如<code>单通道</code>，<code>32k</code>采样率，<code>16位</code>位深，通过<code>ExtractAudio:-ac 1 -ar 32000 -sample_fmt s16</code>实现如下：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt -f ba -x --audio-<span class="built_in">format</span> wav --postprocessor-args &quot;ExtractAudio:-ac <span class="number">1</span> -ar <span class="number">32000</span> -sample_fmt s16&quot; https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>不写<code>FFmpegExtractAudio:</code>会出个<code>WARNING: Post-Processor arguments given without specifying name. The arguments will be given to all post-processors</code>的警告，现在我们实现了从某个<code>Youtube</code>的<code>url</code>只获取音频，并且对其进行<code>重采样</code>，那么如果想只获取某个时间段的音频，怎么办？通过<code>-ss</code>和<code>-to</code>指定：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt -f ba -x --audio-<span class="built_in">format</span> wav --postprocessor-args &quot;ExtractAudio:-ss <span class="number">00</span>:<span class="number">00</span>:<span class="number">29</span> -to <span class="number">00</span>:<span class="number">00</span>:<span class="number">38</span> -ac <span class="number">1</span> -ar <span class="number">32000</span> -sample_fmt s16&quot; https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>这种方法是先下载整段音频，再对整段音频进行重采样和剪切（我看可以使用–download-sections分段下载，但是我试下来不行，后续再研究）。</p>
<p>好，还差最后一步，默认的下载文件名是<code>video title[&lt;video ID&gt;].&lt;file extension&gt;</code>，如果想更改输出的文件名，比如输出文件名格式为<code>videi ID.&lt;file extension&gt;</code>怎么办?通过<code>-o</code>参数指定：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yt-dlp --cookies www.youtube.com_cookies.txt -f ba -x --audio-<span class="built_in">format</span> wav --postprocessor-args &quot;ExtractAudio:-ss <span class="number">00</span>:<span class="number">00</span>:<span class="number">29</span> -to <span class="number">00</span>:<span class="number">00</span>:<span class="number">38</span> -ac <span class="number">1</span> -ar <span class="number">32000</span> -sample_fmt s16&quot; -o &quot;<span class="variable">%(id)s.%</span>(ext)s&quot; https://www.youtube.com/watch?v=<span class="number">0</span>Wkk9iNzA9c</span><br></pre></td></tr></table></figure>

<p>好好好，现在实现了命令行方式从<code>Youtube</code>的指定<code>url</code>下载指定片段的音频，并进行重采样，最后重命名。</p>
</li>
</ul>
<h5 id="pip方式"><a href="#pip方式" class="headerlink" title="pip方式"></a>pip方式</h5><p>（TODO…）</p>
<hr>
<h4 id="视频下载"><a href="#视频下载" class="headerlink" title="视频下载"></a>视频下载</h4><p>前面都是准备工作，下面才是正式下载。由前文可知我们需要狗叫的<code>开始时间</code>和<code>结束时间</code>，以及<code>url</code>才能下载目标片段，由于平衡集的数量相对较少，非平衡训练集的标签质量较低，故还是需要人为筛选。先去<a href="https://github.com/audioset/ontology/blob/master/ontology.json">ontology</a>查询下与狗相关的编号标签，经查询，原版摘录：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;: &quot;/m/<span class="number">0</span>bt9lr&quot;,</span><br><span class="line"></span><br><span class="line">&quot;name&quot;: &quot;Dog&quot;,</span><br><span class="line"></span><br><span class="line">&quot;description&quot;: &quot;Any sounds coming from the familiar domesticated canid which has been selectively bred over millennia <span class="keyword">for</span> companionship, protection, as well as <span class="keyword">for</span> superior sensory capabilities, and other useful behaviors.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;child_ids&quot;: [&quot;/m/<span class="number">05</span>tny_&quot;, &quot;/m/<span class="number">07</span>r_k2n&quot;, &quot;/m/<span class="number">07</span>qf0zm&quot;, &quot;/m/<span class="number">07</span>rc7d9&quot;, &quot;/m/<span class="number">0</span>ghcn6&quot;, &quot;/t/dd00136&quot;, &quot;/m/<span class="number">07</span>srf8z&quot;],</span><br></pre></td></tr></table></figure>

<p>翻译：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;: &quot;/m/<span class="number">0</span>bt9lr&quot;,</span><br><span class="line"></span><br><span class="line">&quot;name&quot;: &quot;Dog&quot;,</span><br><span class="line"></span><br><span class="line">&quot;描述&quot;: &quot;任何来自熟悉的家养犬的声音，这种犬在数千年的选择性繁育中被培育用于陪伴、保护，以及卓越的感官能力和其他有用的行为。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;child_ids&quot;: [&quot;/m/<span class="number">05</span>tny_&quot;, &quot;/m/<span class="number">07</span>r_k2n&quot;, &quot;/m/<span class="number">07</span>qf0zm&quot;, &quot;/m/<span class="number">07</span>rc7d9&quot;, &quot;/m/<span class="number">0</span>ghcn6&quot;, &quot;/t/dd00136&quot;, &quot;/m/<span class="number">07</span>srf8z&quot;],</span><br></pre></td></tr></table></figure>

<p>可见<code>Dog</code>标签是一个上层标签，子标签介绍如下，原版摘录：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;: &quot;/m/<span class="number">05</span>tny_&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Bark&quot;,</span><br><span class="line">&quot;description&quot;: &quot;Principal communication sound produced by dogs. Often transliterated as woof, especially <span class="keyword">for</span> large dogs.&quot;</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>r_k2n&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Yip&quot;,</span><br><span class="line">&quot;description&quot;: &quot;A sharp high-pitched bark or cry, typically from a miniature dog.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>qf0zm&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Howl&quot;,</span><br><span class="line">&quot;description&quot;: &quot;The long plaintive cry of a dog, wolf, or other canidae.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>rc7d9&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Bow-wow&quot;,</span><br><span class="line">&quot;description&quot;: &quot;Dog communication sound that is <span class="built_in">more</span> tonal and less abrupt than a classic bark.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">0</span>ghcn6&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Growling&quot;,</span><br><span class="line">&quot;description&quot;: &quot;A low, guttural vocalization produced by animals as a warning, a sign of aggression, or to express anger.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/t/dd00136&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Whimper (dog)&quot;,</span><br><span class="line">&quot;description&quot;: &quot;Muted dog vocalization indicating submission, fear, or pain.&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>srf8z&quot;,</span><br><span class="line">&quot;name&quot;: &quot;Bay&quot;,</span><br><span class="line">&quot;description&quot;: &quot;The sound made by a hound on the scent.&quot;,</span><br></pre></td></tr></table></figure>

<p>翻译：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;: &quot;/m/<span class="number">05</span>tny_&quot;,</span><br><span class="line">&quot;name&quot;: &quot;吠声&quot;,</span><br><span class="line">&quot;description&quot;: &quot;狗发出的主要交流声音，常被音译为“汪”，特别是对于大型犬。&quot;</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>r_k2n&quot;,</span><br><span class="line">&quot;name&quot;: &quot;尖叫&quot;,</span><br><span class="line">&quot;description&quot;: &quot;一种尖锐的高音吠声或叫声，通常来自迷你犬。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>qf0zm&quot;,</span><br><span class="line">&quot;name&quot;: &quot;嚎叫&quot;,</span><br><span class="line">&quot;description&quot;: &quot;狗、狼或其他犬科动物发出的悠长哀鸣。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>rc7d9&quot;,</span><br><span class="line">&quot;name&quot;: &quot;汪汪声&quot;,</span><br><span class="line">&quot;description&quot;: &quot;一种狗的交流声音，比经典的吠声更具音调感且不那么突然。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">0</span>ghcn6&quot;,</span><br><span class="line">&quot;name&quot;: &quot;低吼&quot;,</span><br><span class="line">&quot;description&quot;: &quot;一种低沉、喉音的发声，由动物发出以示警告、表现攻击性或表达愤怒。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/t/dd00136&quot;,</span><br><span class="line">&quot;name&quot;: &quot;呻吟 (dog)&quot;,</span><br><span class="line">&quot;description&quot;: &quot;低声的狗叫，表示顺从、恐惧或疼痛。&quot;,</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;/m/<span class="number">07</span>srf8z&quot;,</span><br><span class="line">&quot;name&quot;: &quot;嗥声&quot;,</span><br><span class="line">&quot;description&quot;: &quot;猎犬追踪气味时发出的声音。&quot;,</span><br></pre></td></tr></table></figure>

<p>好，现在知道这些对应信息了，那怎么获取Youtube视频ID呢？两种方式：</p>
<ul>
<li><p>在这个页面直接搜，比如<code>bark</code>：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/bark.jpg" class="">

<p>点击进去可以看到一些有用信息：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/bark1.jpg" class="">

<p>再往下拉会看到一系列视频，以第一视频为例：</p>
<img src="/2025/01/16/AudioSet%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/bark2.jpg" class="">

<p>可以看到下方有一系列标签，视频的播放位置也是人为标定的开始点，直接右键<code>复制视频的url</code>即得到了<code>url</code>，开始时间为<code>10s</code>结束时间为<code>19s</code>，但这种方式只适合获取少量音频，如果下载大量数据会极大的浪费人力。</p>
</li>
<li><p>使用上文提到的<code>csv文件</code>，配合python脚本批量下载。</p>
<p>我打算使用这个方案下载<code>Dog</code>标签的音频，实际使用时，非平衡训练集需要人为重新筛选。</p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://research.google/blog/announcing-audioset-a-dataset-for-audio-event-research/">https://research.google/blog/announcing-audioset-a-dataset-for-audio-event-research/</a></li>
<li><a href="https://research.google.com/audioset///dataset/index.html">https://research.google.com/audioset///dataset/index.html</a></li>
<li><a href="https://research.google.com/audioset/">https://research.google.com/audioset/</a></li>
<li><a href="https://research.google.com/audioset///ontology/index.html">https://research.google.com/audioset///ontology/index.html</a></li>
<li><a href="https://research.google.com/audioset///download.html">https://research.google.com/audioset///download.html</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp">https://github.com/yt-dlp/yt-dlp</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/issues/10927">https://github.com/yt-dlp/yt-dlp/issues/10927</a></li>
<li><a href="https://www.bilibili.com/opus/976869609795747864">https://www.bilibili.com/opus/976869609795747864</a></li>
</ol>
]]></content>
      <categories>
        <category>dataset</category>
      </categories>
      <tags>
        <tag>classification</tag>
        <tag>dataset</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/01/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo主题配置及美化之Next</title>
    <url>/2025/01/14/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%BE%8E%E5%8C%96%E4%B9%8Bnext/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面介绍了Hexo + Github Pages环境的搭建和简单的走了一遍总体发布流程，本文介绍：</p>
<ul>
<li>使用<a href="https://github.com/theme-next/hexo-theme-next">Next</a>主题进行页面美化</li>
<li>对站点配置文件（.&#x2F;_config.yml）和主题配置文件（.&#x2F;themes&#x2F;next&#x2F;_config.yml）的部分配置进行使用和介绍</li>
</ul>
<p>关于markdown文件的撰写，下次文章介绍。</p>
<hr>
<span id="more"></span>

<h2 id="1-安装Next主题"><a href="#1-安装Next主题" class="headerlink" title="1.安装Next主题"></a>1.安装Next主题</h2><ul>
<li><p>与上文的yilia主题一样，在<code>blog</code>目录下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>blog/_config.yml</code>文件，拉到倒数第二项的theme配置部分，修改如下：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">theme: <span class="title">next</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>（可选）此时即可本地运行看下效果：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>scheme</code>，配置如下：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line"><span class="function">scheme: <span class="title">Gemini</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>本地看下效果：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h2 id="2-页面美化"><a href="#2-页面美化" class="headerlink" title="2.页面美化"></a>2.页面美化</h2><h3 id="1-站点title"><a href="#1-站点title" class="headerlink" title="1.站点title"></a>1.站点title</h3><ul>
<li><p>打开<code>blog/_config.yml</code>文件，开头部分：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line"><span class="function">title: <span class="title">Chr</span>&#x27;<span class="title">s</span> <span class="title">Blog</span></span></span><br><span class="line"><span class="function"><span class="title">subtitle</span>: &#x27;<span class="title">Record</span> <span class="title">and</span> <span class="title">Share</span>&#x27;</span></span><br><span class="line"><span class="function"><span class="title">description</span>: &#x27;<span class="title">Welcome</span> <span class="title">to</span> <span class="title">my</span> <span class="title">little</span> <span class="title">world</span>&#x27;</span></span><br><span class="line"><span class="function"><span class="title">keywords</span>: <span class="title">Hexo</span>,<span class="title">langgraph</span>,<span class="title">ASR</span>,<span class="title">LLM</span>,<span class="title">TTS</span></span></span><br><span class="line"><span class="function"><span class="title">author</span>: <span class="title">Chr</span></span></span><br><span class="line"><span class="function"><span class="title">language</span>: <span class="title">zh</span>-<span class="title">CN</span></span></span><br><span class="line"><span class="function"><span class="title">timezone</span>: &#x27;<span class="title">Asia</span>/<span class="title">Shanghai</span>&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-导航栏"><a href="#2-导航栏" class="headerlink" title="2.导航栏"></a>2.导航栏</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>menu</code>：	</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">menu:</span></span><br><span class="line"><span class="function">  <span class="title">home</span>: / || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">home</span></span></span><br><span class="line"><span class="function">  <span class="title">about</span>: /<span class="title">about</span>/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">user</span></span></span><br><span class="line"><span class="function">  <span class="title">tags</span>: /<span class="title">tags</span>/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">tags</span></span></span><br><span class="line"><span class="function">  <span class="title">categories</span>: /<span class="title">categories</span>/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">th</span></span></span><br><span class="line"><span class="function">  <span class="title">archives</span>: /<span class="title">archives</span>/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">archive</span></span></span><br><span class="line"><span class="function">  #<span class="title">schedule</span>: /<span class="title">schedule</span>/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">calendar</span></span></span><br><span class="line"><span class="function">  #<span class="title">sitemap</span>: /<span class="title">sitemap.xml</span> || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">sitemap</span></span></span><br><span class="line"><span class="function">  #<span class="title">commonweal</span>: /404/ || <span class="title">fa</span> <span class="title">fa</span>-<span class="title">heartbeat</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>此时导航栏显示了，但点进去会无法访问，运行：</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">n</span> page <span class="string">&quot;about&quot;</span></span><br><span class="line">hexo <span class="built_in">n</span> page <span class="string">&quot;tags&quot;</span></span><br><span class="line">hexo <span class="built_in">n</span> page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>

<p>即会在<code>blog/source</code>文件加下新建<code>about</code>、<code>tags</code>、<code>categories</code>文件夹，每个文件夹下包含一个<code>index.md</code>文件。</p>
</li>
<li><p>此时依旧不行，需要打开各<code>index.md</code>，<code>分别</code>添加对应的<code>type</code>到头信息处，如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="function">title: <span class="title">categories</span></span></span><br><span class="line"><span class="function"><span class="title">date</span>: 2025-01-14 18:02:22</span></span><br><span class="line"><span class="function"><span class="title">type</span>: <span class="title">categories</span></span></span><br><span class="line"><span class="function">---</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-网页底部powered-By-Hexo"><a href="#3-网页底部powered-By-Hexo" class="headerlink" title="3.网页底部powered By Hexo"></a>3.网页底部powered By Hexo</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>powered</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Powered by Hexo &amp; NexT</span><br><span class="line"><span class="function">  powered: <span class="title">false</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="4-代码高亮"><a href="#4-代码高亮" class="headerlink" title="4.代码高亮"></a>4.代码高亮</h3><ul>
<li><p>打开<code>blog/_config.yml</code>文件，搜索<code>highlight</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">highlight:</span></span><br><span class="line"><span class="function">  <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">line_number</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">auto_detect</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">tab_replace</span>: &#x27;&#x27;</span></span><br><span class="line"><span class="function">  <span class="title">wrap</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">hljs</span>: <span class="title">false</span></span></span><br><span class="line"><span class="function"><span class="title">prismjs</span>:</span></span><br><span class="line"><span class="function">  <span class="title">preprocess</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">line_number</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">tab_replace</span>: &#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="5-代码段一键复制"><a href="#5-代码段一键复制" class="headerlink" title="5.代码段一键复制"></a>5.代码段一键复制</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>codeblock</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">codeblock:</span></span><br><span class="line"><span class="function">  # <span class="title">Code</span> <span class="title">Highlight</span> <span class="title">theme</span></span></span><br><span class="line"><span class="function">  # <span class="title">All</span> <span class="title">available</span> <span class="title">themes</span>: <span class="title">https</span>://<span class="title">theme</span>-<span class="title">next.js.org</span>/<span class="title">highlight</span>/</span></span><br><span class="line"><span class="function">  <span class="title">theme</span>:</span></span><br><span class="line"><span class="function">    <span class="title">light</span>: <span class="title">github</span>-<span class="title">dark</span></span></span><br><span class="line"><span class="function">    <span class="title">dark</span>: <span class="title">github</span>-<span class="title">dark</span></span></span><br><span class="line"><span class="function">  <span class="title">prism</span>:</span></span><br><span class="line"><span class="function">    <span class="title">light</span>: <span class="title">prism</span></span></span><br><span class="line"><span class="function">    <span class="title">dark</span>: <span class="title">prism</span>-<span class="title">dark</span></span></span><br><span class="line"><span class="function">  # <span class="title">Add</span> <span class="title">copy</span> <span class="title">button</span> <span class="title">on</span> <span class="title">codeblock</span></span></span><br><span class="line"><span class="function">  <span class="title">copy_button</span>:</span></span><br><span class="line"><span class="function">    <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">    # <span class="title">Available</span> <span class="title">values</span>: <span class="title">default</span> | <span class="title">flat</span> | <span class="title">mac</span></span></span><br><span class="line"><span class="function">    <span class="title">style</span>: <span class="title">mac</span></span></span><br><span class="line"><span class="function">  # <span class="title">Fold</span> <span class="title">code</span> <span class="title">block</span></span></span><br><span class="line"><span class="function">  <span class="title">fold</span>:</span></span><br><span class="line"><span class="function">    <span class="title">enable</span>: <span class="title">false</span></span></span><br><span class="line"><span class="function">    <span class="title">height</span>: 500</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可在<a href="https://theme-next.js.org/highlight/">这里</a>查看代码高亮主题，选择心仪主题。</p>
</blockquote>
</li>
</ul>
<h3 id="6-显示浏览进度"><a href="#6-显示浏览进度" class="headerlink" title="6.显示浏览进度"></a>6.显示浏览进度</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>back2top</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">back2top:</span></span><br><span class="line"><span class="function">  <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  # <span class="title">Back</span> <span class="title">to</span> <span class="title">top</span> <span class="title">in</span> <span class="title">sidebar</span>.</span></span><br><span class="line"><span class="function">  <span class="title">sidebar</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  # <span class="title">Scroll</span> <span class="title">percent</span> <span class="title">label</span> <span class="title">in</span> <span class="title">b2t</span> <span class="title">button</span>.</span></span><br><span class="line"><span class="function">  <span class="title">scrollpercent</span>: <span class="title">true</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="7-本地搜索"><a href="#7-本地搜索" class="headerlink" title="7.本地搜索"></a>7.本地搜索</h3><ul>
<li><p>安装<code>hexo-generator-searchdb</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>blog/_config.yml</code>文件，添加以下代码到末尾：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">search:</span></span><br><span class="line"><span class="function"><span class="title">path</span>: <span class="title">search.xml</span></span></span><br><span class="line"><span class="function"><span class="title">field</span>: <span class="title">post</span></span></span><br><span class="line"><span class="function"><span class="title">format</span>: <span class="title">html</span></span></span><br><span class="line"><span class="function"><span class="title">limit</span>: 10000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>local_search</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">local_search:</span></span><br><span class="line"><span class="function">  <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  # <span class="title">Show</span> <span class="title">top</span> <span class="title">n</span> <span class="title">results</span> <span class="title">per</span> <span class="title">article</span>, <span class="title">show</span> <span class="title">all</span> <span class="title">results</span> <span class="title">by</span> <span class="title">setting</span> <span class="title">to</span> -1</span></span><br><span class="line"><span class="function">  <span class="title">top_n_per_article</span>: 1</span></span><br><span class="line"><span class="function">  # <span class="title">Unescape</span> <span class="title">html</span> <span class="title">strings</span> <span class="title">to</span> <span class="title">the</span> <span class="title">readable</span> <span class="title">one</span>.</span></span><br><span class="line"><span class="function">  <span class="title">unescape</span>: <span class="title">false</span></span></span><br><span class="line"><span class="function">  # <span class="title">Preload</span> <span class="title">the</span> <span class="title">search</span> <span class="title">data</span> <span class="title">when</span> <span class="title">the</span> <span class="title">page</span> <span class="title">loads</span>.</span></span><br><span class="line"><span class="function">  <span class="title">preload</span>: <span class="title">false</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="8-文章字数、阅读时长和访客量、文章阅读量"><a href="#8-文章字数、阅读时长和访客量、文章阅读量" class="headerlink" title="8.文章字数、阅读时长和访客量、文章阅读量"></a>8.文章字数、阅读时长和访客量、文章阅读量</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>busuanzi_count</code>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">busuanzi_count:</span></span><br><span class="line"><span class="function">  <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">total_visitors</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">total_visitors_icon</span>: <span class="title">fa</span> <span class="title">fa</span>-<span class="title">user</span></span></span><br><span class="line"><span class="function">  <span class="title">total_views</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">total_views_icon</span>: <span class="title">fa</span> <span class="title">fa</span>-<span class="title">eye</span></span></span><br><span class="line"><span class="function">  <span class="title">post_views</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">post_views_icon</span>: <span class="title">far</span> <span class="title">fa</span>-<span class="title">eye</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：本地<code>hexo s</code>查看效果时网页底部的访客量和文章阅读量的统计会不正确（很大），但<code>hexo g</code>部署在<code>GitHub Pages</code>上就没问题了。</p>
</blockquote>
</li>
</ul>
<h3 id="9-阅读全文"><a href="#9-阅读全文" class="headerlink" title="9.阅读全文"></a>9.阅读全文</h3><ul>
<li>直接在md文件中添加<code>&lt;!--more--&gt;</code>即可控制摘要内容，即控制Read More（阅读全文）的位置，可添加前言对文章进行总结提炼，详情可点击阅读全文。</li>
</ul>
<h3 id="10-插入图片"><a href="#10-插入图片" class="headerlink" title="10.插入图片"></a>10.插入图片</h3><ul>
<li>插入图片上碰到了一个问题，在<code>typora</code>上图片是正常显示的，但无论是<code>hexo s</code>还是<code>hexo d</code>都无法显示，参考<a href="https://blog.csdn.net/lengcs/article/details/143816877">这个博客</a>解决了问题。</li>
</ul>
<h3 id="11-公式支持"><a href="#11-公式支持" class="headerlink" title="11.公式支持"></a>11.公式支持</h3><ul>
<li><p>打开<code>blog/themes/next/_config.yml</code>，搜索<code>math</code>，设置如下即可：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">math:</span></span><br><span class="line"><span class="function">  # <span class="title">Default</span> (<span class="title">false</span>) <span class="title">will</span> <span class="title">load</span> <span class="title">mathjax</span> / <span class="title">katex</span> <span class="title">script</span> <span class="title">on</span> <span class="title">demand</span>.</span></span><br><span class="line"><span class="function">  # <span class="title">That</span> <span class="title">is</span> <span class="title">it</span> <span class="title">only</span> <span class="title">render</span> <span class="title">those</span> <span class="title">page</span> <span class="title">which</span> <span class="title">has</span> `<span class="title">mathjax</span>: <span class="title">true</span>` <span class="title">in</span> <span class="title">front</span>-<span class="title">matter</span>.</span></span><br><span class="line"><span class="function">  # <span class="title">If</span> <span class="title">you</span> <span class="title">set</span> <span class="title">it</span> <span class="title">to</span> <span class="title">true</span>, <span class="title">it</span> <span class="title">will</span> <span class="title">load</span> <span class="title">mathjax</span> / <span class="title">katex</span> <span class="title">script</span> <span class="title">EVERY</span> <span class="title">PAGE</span>.</span></span><br><span class="line"><span class="function">  <span class="title">every_page</span>: <span class="title">false</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">mathjax</span>:</span></span><br><span class="line"><span class="function">    <span class="title">enable</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">    # <span class="title">Available</span> <span class="title">values</span>: <span class="title">none</span> | <span class="title">ams</span> | <span class="title">all</span></span></span><br><span class="line"><span class="function">    <span class="title">tags</span>: <span class="title">none</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">katex</span>:</span></span><br><span class="line"><span class="function">    <span class="title">enable</span>: <span class="title">false</span></span></span><br><span class="line"><span class="function">    # <span class="title">See</span>: <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">KaTeX</span>/<span class="title">KaTeX</span>/<span class="title">tree</span>/<span class="title">master</span>/<span class="title">contrib</span>/<span class="title">copy</span>-<span class="title">tex</span></span></span><br><span class="line"><span class="function">    <span class="title">copy_tex</span>: <span class="title">false</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="12-加粗"><a href="#12-加粗" class="headerlink" title="12 加粗"></a>12 加粗</h3><ul>
<li><p>在markdown文件中加粗使用<code>**A**</code>即可，但在网页上并没有显示加粗，我目前是用：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&lt;b&gt;A&lt;/b&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="13-TODO"><a href="#13-TODO" class="headerlink" title="13 TODO"></a>13 TODO</h3><hr>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><p><a href="https://blog.csdn.net/Bennnnnnn/article/details/128000842">https://blog.csdn.net/Bennnnnnn/article/details/128000842</a></p>
</li>
<li><p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93644533">https://blog.csdn.net/mqdxiaoxiao/article/details/93644533</a></p>
</li>
<li><p><a href="https://blog.csdn.net/lengcs/article/details/143816877">https://blog.csdn.net/lengcs/article/details/143816877</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10 hexo+GitHub Pages 0成本托管博客</title>
    <url>/2025/01/13/win10Hex+githubpages0%E6%88%90%E6%9C%AC%E6%89%98%E7%AE%A1%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><h3 id="1-安装Node-js和npm"><a href="#1-安装Node-js和npm" class="headerlink" title="1.安装Node.js和npm"></a>1.安装Node.js和npm</h3><ul>
<li><p>下载并安装<a href="https://nodejs.org/zh-cn">Node.js</a>（自带npm工具）</p>
</li>
<li><p>安装完成后，验证是否成功：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li>
</ul>
<span id="more"></span>

<h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h3><ul>
<li><p>下载并安装Git</p>
</li>
<li><p>验证安装是否成功：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h2 id="2-初始化Hexo博客"><a href="#2-初始化Hexo博客" class="headerlink" title="2.初始化Hexo博客"></a>2.初始化Hexo博客</h2><h3 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h3><p>终端运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装Hexo，验证安装是否成功：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<h3 id="2-创建Hexo项目"><a href="#2-创建Hexo项目" class="headerlink" title="2.创建Hexo项目"></a>2.创建Hexo项目</h3><p>在你想存放博客的目录下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line">npm instal</span><br></pre></td></tr></table></figure>

<blockquote>
<p>blog是你的博客文件夹的名称，随意命名。</p>
</blockquote>
<h3 id="3-启动本地预览"><a href="#3-启动本地预览" class="headerlink" title="3.启动本地预览"></a>3.启动本地预览</h3><p>在blog目录下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>打开浏览器，访问<code>http://localhost:4000</code>，即可看到默认的博客页面。</p>
<hr>
<h2 id="3-配置GitHub-Pages"><a href="#3-配置GitHub-Pages" class="headerlink" title="3.配置GitHub Pages"></a>3.配置GitHub Pages</h2><h3 id="1-创建GitHub仓库"><a href="#1-创建GitHub仓库" class="headerlink" title="1.创建GitHub仓库"></a>1.创建GitHub仓库</h3><ul>
<li>登录你的GitHub，创建一个新仓库，命名为username.github.io(username替换为你的GitHub用户名)</li>
<li>这个仓库名是固定格式，GitHub Pages会自动识别并托管网页。</li>
</ul>
<h3 id="2-安装Hexo部署插件"><a href="#2-安装Hexo部署插件" class="headerlink" title="2.安装Hexo部署插件"></a>2.安装Hexo部署插件</h3><p>在blog目录下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="3-修改Hexo配置"><a href="#3-修改Hexo配置" class="headerlink" title="3.修改Hexo配置"></a>3.修改Hexo配置</h3><p>打开blog&#x2F;_config.yml文件，拉到最后的deploy配置部分，修改如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<ul>
<li>repo填写你刚才创建的GitHub仓库地址</li>
<li>如果你的仓库主分支是master，将branch改为master。</li>
</ul>
<h3 id="4-首次部署"><a href="#4-首次部署" class="headerlink" title="4.首次部署"></a>4.首次部署</h3><p>运行以下命令，将博客部署到GitHub Pages:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>即可打开<code>https://username.github.io</code>查看你的博客。</p>
<hr>
<h2 id="4-自定义主题"><a href="#4-自定义主题" class="headerlink" title="4.自定义主题"></a>4.自定义主题</h2><h3 id="1-选择主题"><a href="#1-选择主题" class="headerlink" title="1.选择主题"></a>1.选择主题</h3><ul>
<li><p>以<a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a>为例，在blog文件夹下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开blog&#x2F;_config.yml文件，拉到倒数第二项的theme配置部分，修改如下：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">theme: <span class="title">yilia</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>（可选）本地预览，运行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>部署到GitHub Pages:</p>
<ul>
<li><p>如果运行了本地预览，仅需Ctrl + C 结束掉本地预览，再运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li><p>若未运行本地预览，需运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="5-写博客和更新"><a href="#5-写博客和更新" class="headerlink" title="5.写博客和更新"></a>5.写博客和更新</h2><h3 id="1-新建文章"><a href="#1-新建文章" class="headerlink" title="1.新建文章"></a>1.新建文章</h3><p>在blog目录下运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo new &quot;你的文章标题&quot;</span><br></pre></td></tr></table></figure>

<p>这会在<code>source/_posts</code> 文件夹下生成一个 <code>你的文章标题.md</code> 文件，你可以用任何文本编辑器编辑。</p>
<h3 id="2-本地预览"><a href="#2-本地预览" class="headerlink" title="2.本地预览"></a>2.本地预览</h3><p>运行以下命令本地查看效果：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<h3 id="3-发布更新到GitHub-Pages"><a href="#3-发布更新到GitHub-Pages" class="headerlink" title="3.发布更新到GitHub Pages"></a>3.发布更新到GitHub Pages</h3><p>每次修改或新增内容后运行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
